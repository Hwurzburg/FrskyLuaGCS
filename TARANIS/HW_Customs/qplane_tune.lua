-- This file was automatically generated by FrskyLuaGCSGui

local description = "QPlane Tune"

local parameters = {
--[[
  Position controller P gain.  Converts the distance (in the latitude direction) to the target location into a desired speed which is then passed to the loiter latitude rate controller
--]]
{"Q_P_POSXY_P",0.500,2.000,1,"",},

--[[
  Roll axis rate controller P gain.  Converts the difference between desired roll rate and actual roll rate into a motor speed output
--]]
{"Q_A_RAT_RLL_P",0.01,0.5,0.005,"",},

--[[
  Roll axis rate controller I gain.  Corrects long-term difference in desired roll rate vs actual roll rate
--]]
{"Q_A_RAT_RLL_I",0.01,2.0,0.01,"",},

--[[
  Roll axis rate controller D gain.  Compensates for short-term change in desired roll rate vs actual roll rate
--]]
{"Q_A_RAT_RLL_D",0.0,0.05,0.001,"",},

--[[
  Pitch axis rate controller P gain.  Converts the difference between desired pitch rate and actual pitch rate into a motor speed output
--]]
{"Q_A_RAT_PIT_P",0.01,0.50,0.005,"",},

--[[
  Pitch axis rate controller I gain.  Corrects long-term difference in desired pitch rate vs actual pitch rate
--]]
{"Q_A_RAT_PIT_I",0.01,2.0,0.01,"",},

--[[
  Pitch axis rate controller D gain.  Compensates for short-term change in desired pitch rate vs actual pitch rate
--]]
{"Q_A_RAT_PIT_D",0.0,0.05,0.001,"",},

--[[
  Yaw axis rate controller P gain.  Converts the difference between desired yaw rate and actual yaw rate into a motor speed output
--]]
{"Q_A_RAT_YAW_P",0.10,2.50,0.005,"",},

--[[
  Yaw axis rate controller I gain.  Corrects long-term difference in desired yaw rate vs actual yaw rate
--]]
{"Q_A_RAT_YAW_I",0.010,1.0,0.01,"",},

--[[
  Yaw axis rate controller D gain.  Compensates for short-term change in desired yaw rate vs actual yaw rate
--]]
{"Q_A_RAT_YAW_D",0.000,0.02,0.001,"",},

--[[
  1-byte bitmap of axes to autotune
--]]
{"Q_AUTOTUNE_AXES",{"All","Roll Only","Pitch Only","Yaw Only","Roll and Pitch","Roll and Yaw","Pitch and Yaw",},{7,1,2,4,3,5,6,}},

--[[
  Autotune aggressiveness. Defines the bounce back used to detect size of the D term.
--]]
{"Q_AUTOTUNE_AGGR",0.05,0.10,1,"",},

--[[
  This sets which parameter or set of parameters will be tuned. Values greater than 100 indicate a set of parameters rather than a single parameter. Parameters less than 50 are for QuadPlane vertical lift motors only.
--]]
{"TUNE_PARAM",{"None","RateRollPI","RateRollP","RateRollI","RateRollD","RatePitchPI","RatePitchP","RatePitchI","RatePitchD","RateYawPI","RateYawP","RateYawI","RateYawD","AngleRollP","AnglePitchP","AngleYawP","PosXYP","PosZP","VelXYP","VelXYI","VelZP","AccelZP","AccelZI","AccelZD","FixedWingRollP","FixedWingRollI","FixedWingRollD","FixedWingRollFF","FixedWingPitchP","FixedWingPitchI","FixedWingPitchD","FixedWingPitchFF","Set_RateRollPitch","Set_RateRoll","Set_RatePitch","Set_RateYaw","Set_AngleRollPitch","Set_VelXY","Set_AccelZ",},{0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,50,51,52,53,54,55,56,57,101,102,103,104,105,106,107,}},

--[[
  This sets the range over which tuning will change a parameter. A value of 2 means the tuning parameter will go from 0.5 times the start value to 2x the start value over the range of the tuning channel
--]]
{"TUNE_RANGE",0,4,1,"",},

}
return { list = parameters,description = description}
